<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"   
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context-3.0.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <context:property-placeholder location="classpath:application.properties" />
    
    <context:component-scan base-package="org.zezutom.ldappolicy" />    
    
    <security:ldap-server id="ldapServer" url="ldap://${host}:${port}/${base.dn}" manager-dn="${manager.dn}" manager-password="${manager.pwd}" />
            
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="ldapAuthProvider" >
            <security:password-encoder hash="md5" base64="true"/>
        </security:authentication-provider>    
    </security:authentication-manager>
 
    <bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg index="0" value="" />
        <constructor-arg index="1" value="(${uid.att}={0})" />
        <constructor-arg index="2" ref="ldapServer" />
    </bean>
 
    <bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <constructor-arg>
            <bean id="bindAuthenticator" class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <constructor-arg ref="ldapServer" />
                <property name = "userSearch" ref="ldapUserSearch"></property>
                <property name="userDnPatterns">
                    <list>
                        <value>${uid.att}={0},${group.search}</value>
                    </list>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
                <constructor-arg ref="ldapServer" />
                <constructor-arg value="${group.search}" />
                <property name="groupRoleAttribute" value="${group.role.att}"/>
            </bean>
        </constructor-arg>
        <property name="useAuthenticationRequestCredentials" value="TRUE"/>
        <property name="hideUserNotFoundExceptions" value="TRUE"/>
        <property name="userDetailsContextMapper" ref="inetOrgPersonContextMapper" />
    </bean>
 
    <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <constructor-arg ref="ldapServer" />
    </bean>
     
    <bean id="ldapConfig" class="org.zezutom.ldappolicy.LdapConfig">
        <property name="uid" value="${uid.att}" />
        <property name="group" value="${group.search}" />
        <property name="policy" value="${ppolicy.att}" />
        <property name="policyDn" value="${ppolicy.dn}" />
    </bean>    
    
    <bean id="inetOrgPersonContextMapper" class="org.springframework.security.ldap.userdetails.InetOrgPersonContextMapper" />
    
    <bean id="defaultLdapUsernameToDnMapper" class="org.springframework.security.ldap.DefaultLdapUsernameToDnMapper">
        <constructor-arg value="${group.search}" />
        <constructor-arg value="${uid.att}" />
    </bean>    
    
    <bean id="userDetailsService" class="org.springframework.security.ldap.userdetails.LdapUserDetailsManager">
        <constructor-arg ref="ldapServer" />
        <property name="groupSearchBase" value="${group.search}"/>
        <property name="userDetailsMapper" ref="inetOrgPersonContextMapper"/>
        <property name="usernameMapper" ref="defaultLdapUsernameToDnMapper"/>
        <property name="groupRoleAttributeName" value="${group.role.att}" />
        <property name="groupMemberAttributeName" value="${group.member.att}" />
    </bean>    
    
</beans>